// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BarrelFile should be correct 1`] = `
"/**
 * This file is generated by the openapi-ts-generator
 * #generate-barrel-ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
 
export * from './employee-certification.form-group-fac';
export * from './employee-certification.form-group-patch';
export * from './employee-certification.model';
export * from './employee-competency.form-group-fac';
export * from './employee-competency.form-group-patch';
export * from './employee-competency.model';
export * from './employee-health-item.form-group-fac';
export * from './employee-health-item.form-group-patch';
export * from './employee-health-item.model';
export * from './employee.form-group-fac';
export * from './employee.form-group-patch';
export * from './employee.model';"
`;

exports[`Employee model should be correct 1`] = `
"/**
 * This file is generated by the openapi-ts-generator
 * #generate-model-ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
 // tslint:disable: array-type
 
import { IEmployeeCertification } from './employee-certification.model';
import { IEmployeeCompetency } from './employee-competency.model';
import { IEmployeeHealthItem } from './employee-health-item.model';

export interface IEmployee {
    addressLine1?: string;
    birthDate?: Date;
    certifications?: Array<IEmployeeCertification>;
    city?: string;
    competencies?: Array<IEmployeeCompetency>;
    createdBy?: string;
    createdOnUtc?: Date;
    email?: string;
    fireDate?: Date;
    firstName?: string;
    healthItems?: Array<IEmployeeHealthItem>;
    hireDate?: Date;
    homePhone?: string;
    id?: string;
    isEnabled?: boolean;
    lastName?: string;
    mobilePhone?: string;
    photo?: string;
    state?: string;
    updatedBy?: string;
    updatedOnUtc?: Date;
    zip?: string;
}

export enum EmployeeProperties {
    ADDRESS_LINE_1 = 'addressLine1',
    BIRTH_DATE = 'birthDate',
    CERTIFICATIONS = 'certifications',
    CITY = 'city',
    COMPETENCIES = 'competencies',
    CREATED_BY = 'createdBy',
    CREATED_ON_UTC = 'createdOnUtc',
    EMAIL = 'email',
    FIRE_DATE = 'fireDate',
    FIRST_NAME = 'firstName',
    HEALTH_ITEMS = 'healthItems',
    HIRE_DATE = 'hireDate',
    HOME_PHONE = 'homePhone',
    ID = 'id',
    IS_ENABLED = 'isEnabled',
    LAST_NAME = 'lastName',
    MOBILE_PHONE = 'mobilePhone',
    PHOTO = 'photo',
    STATE = 'state',
    UPDATED_BY = 'updatedBy',
    UPDATED_ON_UTC = 'updatedOnUtc',
    ZIP = 'zip',
}
"
`;

exports[`EmployeeFormGroupFac should be correct 1`] = `
"/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory-ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormGroup, Validators } from '@angular/forms';
export function EmployeeFormGroupFac(): FormGroup {
  return new FormGroup({
    addressLine1: new FormControl(''),
    birthDate: new FormControl(''),
    certifications: new FormControl(''),
    city: new FormControl(''),
    competencies: new FormControl(''),
    email: new FormControl(''),
    fireDate: new FormControl(''),
    firstName: new FormControl(''),
    healthItems: new FormControl(''),
    hireDate: new FormControl(''),
    homePhone: new FormControl(''),
    id: new FormControl(''),
    isEnabled: new FormControl(''),
    lastName: new FormControl(''),
    mobilePhone: new FormControl(''),
    photo: new FormControl(''),
    state: new FormControl(''),
    zip: new FormControl(''),
  });
};
"
`;

exports[`employeeFormPatcher should be correct 1`] = `
"/**
 * This file is generated by the openapi-ts-generator
 * #form-group-patcher-ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */

import { FormGroup } from '@angular/forms';
import { take, tap, filter } from 'rxjs/operators';
import { Observable } from 'rxjs';
import { IEmployee, EmployeeProperties } from './employee.model';

export const employeeFormPatcher = (addEditForm: FormGroup) => (source: Observable<IEmployee>) => source.pipe(
  filter(t => !!t),
  take(1),
  tap(t => {
    addEditForm.patchValue({
      [EmployeeProperties.LAST_NAME]: t.lastName || '',
      [EmployeeProperties.FIRST_NAME]: t.firstName || '',
      [EmployeeProperties.MOBILE_PHONE]: t.mobilePhone || '',
      [EmployeeProperties.HOME_PHONE]: t.homePhone || '',
      [EmployeeProperties.EMAIL]: t.email || '',
      [EmployeeProperties.ADDRESS_LINE_1]: t.addressLine1 || '',
      [EmployeeProperties.CITY]: t.city || '',
      [EmployeeProperties.STATE]: t.state || '',
      [EmployeeProperties.ZIP]: t.zip || '',
      [EmployeeProperties.PHOTO]: t.photo || '',
      [EmployeeProperties.IS_ENABLED]: t.isEnabled || '',
      [EmployeeProperties.HIRE_DATE]: t.hireDate || '',
      [EmployeeProperties.FIRE_DATE]: t.fireDate || '',
      [EmployeeProperties.BIRTH_DATE]: t.birthDate || '',
      [EmployeeProperties.CERTIFICATIONS]: t.certifications || '',
      [EmployeeProperties.COMPETENCIES]: t.competencies || '',
      [EmployeeProperties.HEALTH_ITEMS]: t.healthItems || '',
      [EmployeeProperties.ID]: t.id || '',
    });
  })
);"
`;
